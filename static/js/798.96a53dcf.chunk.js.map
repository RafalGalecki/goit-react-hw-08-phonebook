{"version":3,"file":"static/js/798.96a53dcf.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://goit-react-hw-07-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-07-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","redux/filter/selectors.js","webpack://goit-react-hw-07-phonebook/./src/components/ContactslistElement/ContactsListElement.module.css?74d1","components/ContactslistElement/ContactsListElement.jsx","webpack://goit-react-hw-07-phonebook/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","pages/Phonebook.js"],"sourcesContent":["export const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n","// extracted by mini-css-extract-plugin\nexport default {\"formBox\":\"ContactForm_formBox__cXiHe\",\"inputName\":\"ContactForm_inputName__a8jFO\",\"btn\":\"ContactForm_btn__wll+u\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { nanoid } from 'nanoid';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/operations';\nimport { Notify } from 'notiflix';\nimport css from './ContactForm.module.css';\n\nconst ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.target;\n\n    let isContact;\n    contacts.forEach(person => {\n      if (form.name.value.toLowerCase() === person.name.toLowerCase()) {\n        isContact = true;\n      }\n    });\n    isContact\n      ? Notify.warning(`${form.name.value} is already in your Contacts.`, {\n          timeout: 3000,\n          position: 'left-top',\n          closeButton: true,\n        })\n      : dispatch(\n          addContact({\n            name: form.name.value,\n            number: form.number.value,\n          })\n        );\n    form.reset();\n  };\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  return (\n    <form className={css.formBox} onSubmit={handleSubmit}>\n      <label htmlFor={nameInputId}>Name</label>\n      <input\n        id={nameInputId}\n        type=\"text\"\n        name=\"name\"\n        className={css.inputName}\n        placeholder=\"Enter contact's name\"\n        pattern=\"^[a-zA-Zа-яА-Я\\u0104\\u0105\\u0106\\u0107\\u0118\\u0119\\u0141\\u0142\\u0143\\u0144\\u00D3\\u00F3\\u015A\\u015B\\u0179\\u017A\\u017B\\u017C]+(([' \\-][a-zA-Zа-яА-Я \\u0104\\u0105\\u0106\\u0107\\u0118\\u0119\\u0141\\u0142\\u0143\\u0144\\u00D3\\u00F3\\u015A\\u015B\\u0179\\u017A\\u017B\\u017C])?[a-zA-Zа-яА-Я \\u0104\\u0105\\u0106\\u0107\\u0118\\u0119\\u0141\\u0142\\u0143\\u0144\\u00D3\\u00F3\\u015A\\u015B\\u0179\\u017A\\u017B\\u017C]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <label htmlFor={numberInputId}>Number</label>\n      <input\n        id={numberInputId}\n        type=\"tel\"\n        name=\"number\"\n        className={css.inputName}\n        placeholder=\"Enter contact's number\"\n        pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <button type=\"submit\" className={css.btn} name=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactForm;\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"inputFilter\":\"Filter_inputFilter__8QMOp\"};","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { setFilter } from 'redux/filter/filterSlice';\nimport { nanoid } from 'nanoid';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterId = nanoid();\n\n  const handleChange = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label htmlFor={filterId}>Find contacts by name</label>\n      <input\n        className={css.inputFilter}\n        id={filterId}\n        type=\"search\"\n        onChange={event => handleChange(event)}\n      ></input>\n    </div>\n  );\n};\n\nexport default Filter;\n","import { createSelector } from '@reduxjs/toolkit';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"contactLi\":\"ContactsListElement_contactLi__fsEDQ\",\"contact\":\"ContactsListElement_contact__8RVfB\",\"btnDelete\":\"ContactsListElement_btnDelete__RZfFE\"};","import React from 'react';\nimport css from './ContactsListElement.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport PropTypes from 'prop-types';\n\nconst ContactsListElement = ({ contact }) => {\n  const dispatch = useDispatch();\n\n  const handleClick = () => {\n    dispatch(deleteContact(contact.id));\n  };\n\n  return (\n    <div className={css.contactLi}>\n      <span className={css.contact}>{contact.name}:</span>\n      <span className={css.contact}>{contact.number}</span>\n      <button type=\"button\" className={css.btnDelete} onClick={handleClick}>\n        Delete\n      </button>\n    </div>\n  );\n};\n\nContactsListElement.propTypes = {\n  contact: PropTypes.object,\n};\n\nexport default ContactsListElement;\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\"};","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectIsLoading } from '../../redux/contacts/selectors.js';\nimport { selectFilteredContacts } from 'redux/filter/selectors.js';\nimport ContactsListElement from '../ContactslistElement/ContactsListElement';\nimport css from './ContactsList.module.css';\n\nconst ContactsList = () => {\n  const items = useSelector(selectFilteredContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  return (\n    <div className={css.contactsListBox}>\n      <h4>\n        You have {items.length} contact{items.length === 1 ? null : 's'}\n      </h4>\n      <ul className={css.contactsList}>\n        {!!isLoading && <b>Loading contacts...</b>}\n        {!!items &&\n          items.map(contact => (\n            <li key={contact.id}>\n              <ContactsListElement contact={contact} />\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default ContactsList;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport ContactForm from 'components/ContactForm/ContactForm';\nimport Filter from 'components/Filter/Filter';\nimport ContactsList from 'components/ContactsList/ContactsList';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport { selectError } from 'redux/contacts/selectors';\n\nexport default function Phonebook() {\n  const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n    const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Phonebook</title>\n      </Helmet>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <Filter />\n      <ContactsList />\n      {!!isLoading && !error && <b>Request in progress...</b>}\n    </>\n  );\n}\n"],"names":["selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","dispatch","useDispatch","useSelector","nameInputId","nanoid","numberInputId","className","css","onSubmit","event","preventDefault","isContact","form","target","forEach","person","name","value","toLowerCase","Notify","timeout","position","closeButton","addContact","number","reset","htmlFor","id","type","placeholder","pattern","title","required","filterId","onChange","setFilter","currentTarget","handleChange","selectFilteredContacts","createSelector","filter","contact","includes","onClick","deleteContact","length","map","Phonebook","useEffect","fetchContacts","Helmet"],"sourceRoot":""}